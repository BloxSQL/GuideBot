The `MemoryStore:GetSortedMap()` method returns an object that we'll refer to as your memory store section. This object allows you to perform various operations on the data stored within the memory store. It is faster then hash map and lets you sort your keys. but with a 1000 key limit it can limit you.

Here are the available methods for working with a memory store:

```lua
local MemoryStore = game:GetService("MemoryStore")

local HashMap = MemoryStore:GetSortedMap("Example")

-- METHODS BELOW

HashMap:GetAsync("Key") -- Retrieves the data associated with the specified key.

HashMap:GetRangeAsync(direction, number,LowerBound,UpperBound) -- Returns a memory store sorted aray.

HashMap:RemoveAsync("Key") -- Deletes the data associated with the specified key from the memory store.

HashMap:SetAsync("Key", "Value", expiration) -- Stores a value in the memory store with an optional expiration time.

HashMap:UpdateAsync("Key", "Value", expiration) -- Updates the value of an existing key, allowing for expiration updates as well.
```

**Main Document**
https://create.roblox.com/docs/reference/engine/classes/MemoryStoreSortedMap